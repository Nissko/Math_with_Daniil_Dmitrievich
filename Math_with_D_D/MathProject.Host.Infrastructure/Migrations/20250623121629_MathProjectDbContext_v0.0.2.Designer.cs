// <auto-generated />
using System;
using MathProject.Host.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MathProject.Host.Infrastructure.Migrations
{
    [DbContext(typeof(MathProjectContext))]
    [Migration("20250623121629_MathProjectDbContext_v0.0.2")]
    partial class MathProjectDbContext_v002
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MathProject.Host.Domain.Aggregates.Subject.Categories.DirectionOfTrainingEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("_dateTrainingDir")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("Date");

                    b.Property<int>("_displayOrder")
                        .HasColumnType("integer")
                        .HasColumnName("DisplayOrder");

                    b.Property<bool>("_isVisible")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("IsVisible");

                    b.Property<string>("_name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Name");

                    b.Property<Guid>("_trainingCategoryId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("_trainingCategoryId");

                    b.ToTable("DirectionOfTrainings", (string)null);
                });

            modelBuilder.Entity("MathProject.Host.Domain.Aggregates.Subject.Categories.LearningTopicsEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("_directionOfTrainingId")
                        .HasColumnType("uuid");

                    b.Property<int>("_displayOrder")
                        .HasColumnType("integer")
                        .HasColumnName("DisplayOrder");

                    b.Property<bool>("_isVisible")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("IsVisible");

                    b.Property<string>("_name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Name");

                    b.Property<string>("_number")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Number");

                    b.HasKey("Id");

                    b.HasIndex("_directionOfTrainingId");

                    b.ToTable("LearningTopics", (string)null);
                });

            modelBuilder.Entity("MathProject.Host.Domain.Aggregates.Subject.Categories.SubthemesOfLearningEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("_displayOrder")
                        .HasColumnType("integer")
                        .HasColumnName("DisplayOrder");

                    b.Property<bool>("_isVisible")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("IsVisible");

                    b.Property<Guid>("_learningTopicsId")
                        .HasColumnType("uuid");

                    b.Property<string>("_name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.HasIndex("_learningTopicsId");

                    b.ToTable("SubthemeOfLearnings", (string)null);
                });

            modelBuilder.Entity("MathProject.Host.Domain.Aggregates.Subject.Categories.TrainingCategoryEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("_displayOrder")
                        .HasColumnType("integer")
                        .HasColumnName("DisplayOrder");

                    b.Property<bool>("_isVisible")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("IsVisible");

                    b.Property<string>("_name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Name");

                    b.Property<Guid>("_subjectId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("_subjectId");

                    b.ToTable("TrainingCategories", (string)null);
                });

            modelBuilder.Entity("MathProject.Host.Domain.Aggregates.Subject.SubjectEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("_name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.ToTable("Subjects", (string)null);
                });

            modelBuilder.Entity("MathProject.Host.Domain.Aggregates.Subject.Categories.DirectionOfTrainingEntity", b =>
                {
                    b.HasOne("MathProject.Host.Domain.Aggregates.Subject.Categories.TrainingCategoryEntity", "TrainingCategory")
                        .WithMany("DirectionOfTrainings")
                        .HasForeignKey("_trainingCategoryId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.Navigation("TrainingCategory");
                });

            modelBuilder.Entity("MathProject.Host.Domain.Aggregates.Subject.Categories.LearningTopicsEntity", b =>
                {
                    b.HasOne("MathProject.Host.Domain.Aggregates.Subject.Categories.DirectionOfTrainingEntity", "DirectionOfTraining")
                        .WithMany("LearningTopics")
                        .HasForeignKey("_directionOfTrainingId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.Navigation("DirectionOfTraining");
                });

            modelBuilder.Entity("MathProject.Host.Domain.Aggregates.Subject.Categories.SubthemesOfLearningEntity", b =>
                {
                    b.HasOne("MathProject.Host.Domain.Aggregates.Subject.Categories.LearningTopicsEntity", "LearningTopicsEntity")
                        .WithMany("SubthemesOfLearnings")
                        .HasForeignKey("_learningTopicsId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.Navigation("LearningTopicsEntity");
                });

            modelBuilder.Entity("MathProject.Host.Domain.Aggregates.Subject.Categories.TrainingCategoryEntity", b =>
                {
                    b.HasOne("MathProject.Host.Domain.Aggregates.Subject.SubjectEntity", "Subject")
                        .WithMany("TrainingCategories")
                        .HasForeignKey("_subjectId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("MathProject.Host.Domain.Aggregates.Subject.Categories.DirectionOfTrainingEntity", b =>
                {
                    b.Navigation("LearningTopics");
                });

            modelBuilder.Entity("MathProject.Host.Domain.Aggregates.Subject.Categories.LearningTopicsEntity", b =>
                {
                    b.Navigation("SubthemesOfLearnings");
                });

            modelBuilder.Entity("MathProject.Host.Domain.Aggregates.Subject.Categories.TrainingCategoryEntity", b =>
                {
                    b.Navigation("DirectionOfTrainings");
                });

            modelBuilder.Entity("MathProject.Host.Domain.Aggregates.Subject.SubjectEntity", b =>
                {
                    b.Navigation("TrainingCategories");
                });
#pragma warning restore 612, 618
        }
    }
}
