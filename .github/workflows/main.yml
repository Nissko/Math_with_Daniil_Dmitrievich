name: Deploy to VDS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create git archive
        run: |
          echo "Creating clean archive..."
          git archive --format=tar.gz -o myapp.tar.gz HEAD

      - name: Check archive exists
        run: |
          if [ -f myapp.tar.gz ]; then
            echo "Archive created successfully."
            ls -la myapp.tar.gz
          else
            echo "ERROR: Archive was NOT created!"
            exit 1
          fi

      - name: Copy via SCP
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.VDS_HOST }}
          username: ${{ secrets.VDS_USER }}
          password: ${{ secrets.VDS_PASSWORD }}
          port: 22
          source: "myapp.tar.gz"
          target: "/home/${{ secrets.VDS_USER }}/myapp.tar.gz"

      - name: Extract and Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VDS_HOST }}
          username: ${{ secrets.VDS_USER }}
          password: ${{ secrets.VDS_PASSWORD }}
          script: |
            echo "Creating workspace..."
            mkdir -p ~/myapp
            cd ~/myapp

            echo "Removing old files..."
            rm -rf *

            echo "Moving archive..."
            mv ~/myapp.tar.gz .

            echo "Extracting files..."
            tar -xzf myapp.tar.gz

            echo "Check extracted files:"
            ls -la

            echo "Checking docker-compose.yml..."
            if [ -f docker-compose.yml ]; then
              echo "docker-compose.yml found."
            else
              echo "ERROR: docker-compose.yml NOT FOUND!"
              exit 1
            fi

            echo "Building Docker images..."
            docker-compose down
            docker-compose up -d --build

            echo "Cleanup..."
            rm -f myapp.tar.gz
